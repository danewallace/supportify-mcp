# Supportify MCP - Apple Support Guides for LLMs

Need help with Apple device deployment or security architecture?
AI assistants can help!

Apple Support guides contain comprehensive information about Platform Security and Deployment,
but they're difficult for AI assistants to parse and understand.
This service makes them accessible in clean, AI-readable Markdown format.

## HTTP Usage

Access Apple Support guides through our API:

### Discovery & Search

- Browse all topics: `/guide/{guide}/toc`
- Search by keyword: `/guide/{guide}/search?q=enrollment`
- Get full content: `/guide/{guide}/{slug}`

### Examples

**Deployment Guide:**
- All 257 Deployment Topics: https://supportify-mcp.pages.dev/guide/deployment/toc
- Search: Enrollment: https://supportify-mcp.pages.dev/guide/deployment/search?q=enrollment
- Declarative Device Management: https://supportify-mcp.pages.dev/guide/deployment/intro-to-declarative-device-management-depb1bab77f8

**Security Guide:**
- All Security Topics: https://supportify-mcp.pages.dev/guide/security/toc
- Search: FileVault: https://supportify-mcp.pages.dev/guide/security/search?q=filevault
- Secure Enclave: https://supportify-mcp.pages.dev/guide/security/secure-enclave-sec59b0b31ff

## MCP Usage

Connect your MCP client to `http://localhost:51345/mcp` for local development:

### GitHub Copilot for Xcode

1. Open **GitHub Copilot for Xcode** and go to **Settings…**
2. Select the **MCP** tab
3. Click **Edit Config**
4. Enter the following configuration:

```json
{
  "servers": {
    "supportify": {
      "type": "http",
      "url": "http://localhost:51345/mcp"
    }
  }
}
```

### Cursor

Add Supportify MCP to your Cursor settings by opening Settings → Features → MCP and adding the configuration.

### VSCode

Create a `.vscode/mcp.json` file in your workspace and enter the following configuration:

```json
{
  "servers": {
    "supportify": {
      "type": "http",
      "url": "http://localhost:51345/mcp"
    }
  }
}
```

### Claude Desktop

1. Open **Claude Desktop**
2. Go to **Settings → Connectors**
3. Click **"Add custom connector"**
4. Set **"Name"** to `"supportify"`
5. Set **"Remote MCP server URL"** to `"http://localhost:51345/mcp"`
6. Click "Add"

### Claude Code

Run the following command in your terminal:

```shell
claude mcp add --transport http supportify http://localhost:51345/mcp
```

### Other

Supportify's MCP server supports Streamable HTTP and Server-Sent Events (SSE) transport.
**If your client supports either of these,
configure it to connect directly to `http://localhost:51345/mcp`.**

Otherwise,
you can run this command to proxy over stdio:

```json
{
  "mcpServers": {
    "supportify": {
      "command": "npx",
      "args": ["-y", "mcp-remote", "http://localhost:51345/mcp"]
    }
  }
}
```

### Available Resources

- `support://{guide}/{path}` - Apple Support guide pages in Markdown format
  - Example: `support://security/secure-enclave-sec59b0b31ff` returns Secure Enclave documentation
  - Example: `support://deployment/intro-to-declarative-device-management-depb1bab77f8` returns Declarative Device Management guide

### Available Tools

- `fetchAppleSupportGuide` - Fetches Apple Support guide pages by guide name and path
  - Parameters:
    - `guide` (enum): "security" or "deployment"
    - `path` (string): Page path/slug (e.g., "secure-enclave-sec59b0b31ff", "intro-to-declarative-device-management-depb1bab77f8")
  - Returns content as Markdown

## Troubleshooting

If you're experiencing connection timeouts or network issues with the MCP server,
you may need to configure a proxy.
This is particularly common in corporate environments
or regions with restricted internet access.

Configure your MCP client to use a proxy by adding environment variables:

```json
{
  "mcpServers": {
    "supportify": {
      "command": "npx",
      "args": ["-y", "mcp-remote", "http://localhost:51345/mcp"],
      "env": {
        "HTTP_PROXY": "http://proxy.example.com:8080",
        "HTTPS_PROXY": "http://proxy.example.com:8080"
      }
    }
  }
}
```

Replace `proxy.example.com:8080` with your actual proxy server details.
For authenticated proxies, use the format:
`http://username:password@proxy.example.com:8080`

## About

This is an unofficial,
independent project and is not affiliated with or endorsed by Apple Inc.
"Apple", "Xcode", and related marks are trademarks of Apple Inc.

This service is an accessibility-first,
on‑demand renderer.
It converts a single Apple Developer page to Markdown only when requested by a user.
It does not crawl, spider, or bulk download;
it does not attempt to bypass authentication or security;
and it implements rate limiting to avoid imposing unreasonable load.

Content is fetched transiently and may be cached briefly to improve performance.
No permanent archives are maintained.
All copyrights and other rights in the underlying content remain with Apple Inc.
Each page links back to the original source.

Your use of this service must comply with Apple's Terms of Use and applicable law.
You are solely responsible for how you access and use Apple's content through this tool.
Do not use this service to circumvent technical measures or for redistribution.

